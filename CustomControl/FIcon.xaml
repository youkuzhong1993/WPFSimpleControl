<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CustomControl">
    <Style x:Key="FIcon" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="pack://application:,,,/CustomControl;component/Resource/#iconfont"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style x:Key="FIconButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="local:ControlAttachedProperty.CornerRadius" Value="4"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{TemplateBinding local:ControlAttachedProperty.CornerRadius}">
                        <TextBlock Style="{StaticResource FIcon}" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=(local:ButtonAttachedProperty.PressedBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(local:ButtonAttachedProperty.PressedBorderBrush), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=(local:ButtonAttachedProperty.MouseOverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=(local:ButtonAttachedProperty.MouseOverBorderBrush), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FIconToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="local:ControlAttachedProperty.CornerRadius" Value="4"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{TemplateBinding local:ControlAttachedProperty.CornerRadius}">
                        <TextBlock x:Name="txt" Style="{StaticResource FIcon}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}" Text="{Binding Path=(local:ControlAttachedProperty.FIcon), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Text" TargetName="txt" Value="{Binding Path=(local:ControlAttachedProperty.CheckedFIcon), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter Property="Foreground" TargetName="txt" Value="{Binding Path=(local:ControlAttachedProperty.CheckedForeground), RelativeSource={RelativeSource  Mode=TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>